install.packages("Hmisc")
install.packages("prettyR")
library(prettyR)
library(Hmisc)
# 범주형 변수에 대한 통계분석
#   1.  빈도분석
# > install.packages(‘Hmisc’)
# > install.packages(‘prettyR’)
# > library(Hmisc)
# > library(prettyR)
test <- read.csv(file.choose())  # 파일 선택창 띄우는 함수
View(test)
str(test)
# shapiro-wilk검정
shapiro.test(test$score)
# 가설검정만의 결과를 믿지 말고
dim(test$score)
# 가설검정만의 결과를 믿지 말고
dim(test)
# 표본의 크기가 너무 작으니까 --> 이 때는, 비모수검정방법도 써봐야 한다
hist(test$score, freq = F)
lines(density(test$score), col='red', lw=2)
# 표본의 크기가 너무 작으니까 --> 이 때는, 비모수검정방법도 써봐야 한다
hist(test$score, freq = F, breaks=5)
lines(density(test$score), col='red', lw=2)
# 범주형 변수에 대한 통계분석
#   1.  빈도분석
# > install.packages(‘Hmisc’)
# > install.packages(‘prettyR’)
# > library(Hmisc)
# > library(prettyR)
test <- read.csv(file.choose())
View(test)
# 범주형 변수에 대한 통계분석
#   1.  빈도분석
# > install.packages(‘Hmisc’)
# > install.packages(‘prettyR’)
# > library(Hmisc)
# > library(prettyR)
test <- read.csv(file.choose(), fileEncoding = 'UTF-8') # ch2_discrete.csv
View(test)
# 유효하지 않은 다국어 문자가 나왔다는 오류가 뜬다면,
#  help page열어서, fileEncoding 매개변수 사용
str(test)
# 1. 빈도분석
freq(test) # {prettyR}
# pandas의 describe 함수와 비슷
describe(test)  # {Hmisc}
# pandas의 describe 함수와 비슷
describe(test)  # {Hmisc}
prettyR::describe()
prettyR::describe(test)
ㅡㅔㅎ
#
mpg
# pandas의 describe 함수와 비슷
Hmisc::describe(test)  # {Hmisc}
mpg[1,2]
mpg[c(1,2)]
mpg[, c(1,2)]
# manu model year에 대해 빈도분석해보기
freq(mpg$manufacturer)
# Frequencies for mpg$manufacturer
# dodge     toyota volkswagen       ford  chevrolet       audi    hyundai     subaru     nissan      honda       jeep    pontiac land rover    mercury    lincoln         NA
# 37   34   27   25   19   18   14   14   13    9    8    5    4    4    3    0
# %    15.8 14.5 11.5 10.7  8.1  7.7    6    6  5.6  3.8  3.4  2.1  1.7  1.7  1.3    0
# %!NA 15.8 14.5 11.5 10.7  8.1  7.7    6    6  5.6  3.8  3.4  2.1  1.7  1.7  1.3
prettyR::describe(mpg$manufacturer)
# manu model year에 대해 빈도분석해보기
freq(mpg[, c(1,2,4)])
prettyR::describe(mpg[, c(1,2,4)])
# 범주가 많아 보기에 복잡함.
freq(mpg[, c('drv', 'fl')])
# %    45.3   44 10.7    0
# %!NA 45.3   44 10.7
#
#
# Frequencies for fl
#         r    p    e    d    c   NA
#       168   52    8    5    1    0
# %    71.8 22.2  3.4  2.1  0.4    0  : 일반 휘발유가 많음
# %!NA 71.8 22.2  3.4  2.1  0.4
# --> 균형있게 자료수집됐는지 확인 가능
prettyR::describe(mpg[c(7,10)])
# 범주형변수 분석
#   2. 교차분석 : 내부적으로 카이제곱검정을 함 : 두 범주변수의 빈도정보로
#                 “두 변수가 독립적인지/관계가 있는지” 검정함.
# ch2_discrete 성별 제품 교차분석
xtab(~product+gender, data=test) # {prettyR} : +앞변수: 영향받는변수 / +뒤변수: 영향주는변수
# gender와 area의 관계가 잇는가?
xtab(~area+gender, data=test)
# area별 gender의 관계가 잇는가?
xtab(~gender+area, data=test)
# range 구하기
range(mpg$cty) # {base}
range(mpg$hw)
range(mpg$hwy)
# 사분위 IQR 구하기
IQR(mpg$cty)
IQR(mpg$hwy)
install.packages("moments")
library(moments)
# 분포도
# -비대칭도
# > install.packages(‘moments’)
# > library(moments)
skewness(mpg$cty)  # prettyR::skew()도 사용가능
# 0.791445 :
skewness(mpg$hwy)
# 분포도
# -비대칭도
# Sk = 0 : 정규분포
# Sk < 0 : 왼쪽꼬리분포, 오른족으로 치우침
hist(mpg$cty, freq = F)
hist(mpg$hwy, freq=F, breaks=30)
lines(density(mpg$hwy), col='red', lwd=2)
hist(mpg$cty, freq=F, breaks=30)
lines(density(mpg$cty), col='red', lwd=2)
par(mfrow=c(1,2))
hist(mpg$cty, freq=F, breaks=30)
lines(density(mpg$cty), col='red', lwd=2)
?par
# 분포도
# - 첨도
kurtosis(mpg$cty) # {moments}
# 4.468651
kurtosis(mpg$hwy)
#
test2 <- read.csv(file.choose())
View(test2)
# income에 대해 왜도와 첨도 구하여, 분포의 모양과 맞는지 확인
skewness(test2$incom)
kurtosis(test2$incom)
hist(test2$incom, freq = F, breaks=5)
hist(test2$incom, freq = F, breaks=5)
par(mfrow=1)
hist(test2$incom, freq = F, breaks=5)
par(mfrow=c(1,1))
hist(test2$incom, freq = F, breaks=5)
lines(density(test2$incom), col='red', lwd=2)
skew(test2$incom) # {prettyR}
hist(test2$incom, freq = F, breaks=50)
lines(density(test2$incom), col='red', lwd=2)
#
# 표본개수
length(test2)
length(test2$incom)
mean(test2$incom)
var(test2$incom
var(test2$incom)
var(test2$incom)
sd(test2$incom)
max(test2$incom)
min(test2$incom)
median(test2$incom)
quantile(test2$incom)
#     0%    25%    50%    75%   100%
# 111.00 209.00 328.00 457.25 987.00
quantile(mpg$cty)
quantile(mpg$cty, probs = c(.1, .3, .5, .8, 1))
quantile(mpg$cty, probs = seq(0,1, .1))
# 상관분석 상관계수
cor(mpg$hwy, mpg$cty)
# 공분산 : 단위가 없음
cov(mpg$hwy, mpg$cty)
stem(mpg$cty)
scale(mpg$cty)
#  연속형 변수의 표준화!!
# --> 자료형이 matrix 타입이 되고,
# --> N(0,1)의 값으로 바꿔줌(평균이 0, 분산이 1 --> 편차도 1)
x <- scale(mpg$cty)
class(x)
x <- as.data.frame(x)
str(x)
mean(x)
mean(x)
x <- x$V1
class(x)
mean(x)
var(x)
hist(x, freq = F, breaks=300)
hist(x, freq = F, breaks=100)
skewness(x)
kurtosis(x)
# --> 확률분포의 모양이 정규분포와 비슷할까?
# 그려보자
hist(x, freq = F, breaks=30)
lines(density(x), col='red', lwd=2)
shapiro.test(mpg$cty)
#
# Shapiro-Wilk normality test
#
# data:  mpg$cty
# W = 0.95679, p-value = 1.744e-06 --> 귀무가설기각: 정규성 X
shapiro.test(x)
#
# Shapiro-Wilk normality test
#
# data:  x
# W = 0.95679, p-value = 1.744e-06 --> 귀무가설기각: 정규성 X
# --> 꼬리분포니까!!
boxplot(mpg$cty)
shapiro.test(mpg$cty)
# pandas의 describe 함수와 비슷
Hmisc::describe(test)  # {Hmisc} / 최빈값없음
prettyR::describe(test)  # 최빈값 함께 출력
library(prettyR)
library(Hmisc)
#
# Shapiro-Wilk normality test
#
# data:  mpg$cty
# W = 0.95679, p-value = 1.744e-06 --> 귀무가설기각: 정규성 X
shapiro.test(x)
boxplot(mpg$cty)
boxplot(mpg$cty ~ mpg$drv)
boxplot.stats(mpg$cty) # {graphics}
boxplot(mpg$cty ~ mpg$fl) # 연속~범주 : 범주별로 나타나는 분포 비교
boxplot(cty~fl, data=mpg)
boxplot(mpg$cty ~ mpg$fl) # 연속~범주 : 범주별로 나타나는 분포 비교
boxplot(cty~fl, data=mpg, col='lightgray')
boxplot(cty~drv, data=mpg, col='lightgray')
result <- boxplot(mpg$cty)
class(result)
library(dplyr)
library(prettyR)
library(Hmisc)
result <- boxplot(mpg$cty)
class(result)
result
# 이상치의 정확한 값을 알아보려면,
boxplot.stats(mpg$cty) # {grdevices}
# 교차표 만들기
test3 <- read.csv(file.choose())
# 교차표 만들기
# ch6_chisq.csv
test3 <- read.csv(file.choose(), fileEncoding = 'UTF-8')
library(readr)
ch6_chisq <- read_csv("Data/sa/ch6_chisq.csv",
locale = locale(encoding = "cp949"))
View(ch6_chisq)
# 교차표 만들기
# ch6_chisq.csv
test3 <- read.csv(file.choose(), fileEncoding = 'cp949')
View(test3)
crosstbl <- xtab(gender~snack)
crosstbl <- xtab(gender~snack, data=test3)
crosstbl
chisq.test(crosstbl)
crosstbl <- xtabs(snack~gender, data=test3) #  카이제곱검정에서 오류
crosstbl
chisq.test(crosstbl)
crosstbl <- xtab(~snack + gender, data=test3)
chisq.test(crosstbl) # 'list' object cannot be coerced to type 'double'
crosstbl <- xtabs(~snack + gender, data=test3) #  카이제곱검정에서 오류
crosstbl
#           gender
# snack     남 여
# candy     19 17
# chocolate 25  2  --> 카이제곱에서는 빈도만 있어야 함. 비율있으면 x
crosstbl
chisq.test(crosstbl) # 'list' object cannot be coerced to type 'double'
crosstbl <- xtab(~snack + gender, data=test3)
chisq.test(crosstbl) # 'list' object cannot be coerced to type 'double'
x <- 1:100
sum(x>50)
x>50
z = c(1:3, NA)
z==NA
c(1,2,3,4) + c(5,6,7,8,9)
c(1,2,3,4) * c(5,6,7,8,9)
"+"(2,3)
"-"(2,3)
'*'(2,3,4)
'*'(2,3,)
'*'(2,3)
??carseats
??Carseats
??stdev
x <- c(1:5)
y <- seq(10,50,10)
str(y)
str(x)
xy <- rbind(x,y)
str(xy)
xy
class(xy)
dim(m1) <- c(4,5)
m1 <- c(82.5,79.2,89.5,80.9,89.9,88.2,81.5,91.5,87.2,81.9,70.3,89.2,83.2,78.9,88.2,83.5,79.8,87.5,82.5)
dim(m1) <- c(4,5)
m1 <- c(82.5,79.2,89.5,85.6,80.9,89.9,88.2,81.5,91.5,87.2,81.9,70.3,89.2,83.2,78.9,88.2,83.5,79.8,87.5,82.5)
dim(m1) <- c(4,5)
apply(m1, 1, sum)
apply(m1, 2, sum)
lapply(m1, sum)
sapply(m1, sum)
apply(m1, 1, sum)
??iris
class(lapply(iris[, 1:4], mean))
class(sapply(iris[, 1:4], mean))
sum(TRUE)
sum(TRUE, T, T)
# data cleansing - mv
rm(list = ls())
# 결측치: NA
# 결측치 갖는 df만들기
(df <- data.frame(sex = c("M", "F", NA, "M", "F"),
score = c(5,4,3,4,NA)))
is.na(df)  # true가 NA
table(df)  # 변수에 신경쓰며, 각 변수의 범주별로 개수 세 줌.
# 변수별로 결측치 확인
table(is.na(df$sex))
# score에 결측치가 없는 행들 출력
(df_nomiss_score <- df %>% filter(!is.na(score))) # sex에 NA있는 것은 출력됨.
# 결측치 대체
# 1. 결측치 행 제외
library(dplyr)
# score에 결측치가 없는 행들 출력
(df_nomiss_score <- df %>% filter(!is.na(score))) # sex에 NA있는 것은 출력됨.
# 결측치처리1 - 결측치 행 삭제: 추천X
# df에 결측치가 없는 행만 담은, df 생성.
(df_nomiss <- df %>% filter(!is.na(score) & !is.na(sex)))
mean(df_nomiss$score)
sum(df_nomiss$score)
# 4-1-1. 산술평균으로 대체
# ifelse{base}
df_exam$math <- ifelse(is.na(df_exam$math), 55, df_exam$math)  # math변수 값이 결측치면 평균인 55로, 아니면 그대로 둠
# summarise{dplyr}에 na.rm 사용하려면,
(df_exam[c(3,8,15), "math"] <- NA) # 결측치 생성.
df_exam <- read.csv("Data/csv_exam.csv")
df_exam[c(3,8,15), "math"] <- NA
# 4-1-1. 산술평균으로 대체
# ifelse{base}
df_exam$math <- ifelse(is.na(df_exam$math), 55, df_exam$math)  # math변수 값이 결측치면 평균인 55로, 아니면 그대로 둠
table(is.na(df_exam$math))
# 결측치처리5 - outlier
(outlier <- data.frame(sex = c(1,2,1,3,2,1,2),
score = c(5,4,3,4,2,6,0)))
table(outlier$sex)  # 범주형 변수에서, 범주로서 나올 수 없는 값이 있는지 확인!!! sex:3(outlier)
# 1 2 3
# 3 3 1
table(outlier$score)
# 이상치 대체 [존재할 수 없는 값]-1. 이상치 → 결측치
(outlier$sex <- ifelse(outlier$sex==3, NA, outlier$sex))
(outlier$score <- ifelse(outlier$score >5 | outlier$score < 1, NA, outlier$score))
# 이상치 대체 -2. 변경한 결측치 제외
(outlier %>%
filter(!is.na(sex) & !is.na(score)) %>%
group_by(sex) %>%
summarise(mean_score = mean(score),
max_score = max(score),
count = n())
)
#--
# 이상치 대체 2. [극단치] 이상치 → 결측치
# boxplot 이용하여, 극단치 기준 정해서, 결측처리
df_mpg <- as.data.frame(ggplot2::mpg)
str(df_mpg)
# IQR 위아래를 벗어나면 → 이상치!
#   → 극단치인지는 아직 판단할 수 없음!
boxplot(df_mpg$hwy)
boxplot(df_mpg$hwy)$stats
( result <- boxplot(df_mpg$hwy))
# 이상치 대체2. [극단치] 극단치 중 이상치 기존 정해 → 결측치
df_mpg$hwy <- ifelse(df_mpg$hwy < 12 | df_mpg$hwy>37, NA, df_mpg$hwy)
table(is.na(df_mpg$hwy))  # 3개의 값을 결측치로 변경함.
boxplot(df_mpg$hwy) # 이상치가 제거됨
library(ggplot2)
# 1. 레이아웃 생성
ggplot(data=mpg, aes(x=displ, y=hwy))
# 2. 그래프 그리기 * 산점도
ggplot(data=mpg, aes(x=displ, y=hwy)) + geom_point()
ggplot(data=df_mpg, aes(x=reorder(drv, -mean_hwy), y=mean_hwy))
ggplot(data=mpg, aes(x=reorder(drv, -mean_hwy), y=mean_hwy))
# mpg / mmidwest의 scatterplot -> 연속형변수 간 관계파악
ggplot(data=mpg, aes(x=cty, y=hwy)) +
geom_point()   # 상관관계
ggplot(data=midwest, aes(x=poptotal, y=popasian)) +
geom_point() +
xlim(0, 5e+05) +
ylim(0,10000)
ggplot(data=midwest, aes(x=poptotal, y=popasian)) +
geom_point() +
xlim(0, 5e+05) +
ylim(0,10000)
# 구동축별 평균연비 나옴
(df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy)))
# barplot 그리기
ggplot(data=df_mpg, aes(x=drv, y=mean_hwy)) +
geom_col()
# x축 순서변경 : mean_hwy기준으로 내림
ggplot(data=df_mpg, aes(x=reorder(drv, -mean_hwy), y=mean_hwy)) +
geom_col()
ggplot(data=df_mpg, aes(x=reorder(drv, mean_hwy), y=mean_hwy)) +
geom_col()
# 연속형변수를 지정한다면,
# barplot이 아니라 히스토그램으로 해야함.
ggplot(data = mpg, aes(x=hwy)) + geom_bar() # 출력은 해줌
# 원칙은 geom_histogram()
ggplot(data=mpg, aes(x=hwy)) + geom_histogram()
#
(df_mpg2 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5))
ggplot(data = df_mpg2, aes(x= reorder(manufacturer, -mean_cty),
y = mean_cty)) +
geom_col()
#
ggplot(data = mpg, aes(x=class)) +
geom_bar()
ggplot(data = economics, aes(x=date, y=unemploy)) +
geom_line()
#
ggplot(data=economics, aes(x=date, y=psavert)) +
geom_line()
# 2. 데이터의 분포 *boxplot
ggplot(data=mpg, aes(x=drv, y=hwy)) +
geom_boxplot()
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
# 1-1. to.data.frame 안쓰면? list
temp <- read.spss(file="Data/Koweps_hpc10_2015_beta1.sav")
class(temp)  # list
str(temp)
?memorise
?memoise
?str_replace_all
??str_replace_all
library(KoNLP)
# sudo apt install -y openjdk-8-jdk openjdk-8-jre : 윈도우와 동일
# 자바설치 확인
# java -version
# R에 Java 파일이 있을 거라고 생각되는 위치에 업데이트 한다.
#
#
# sudo R CMD javareconf
# sudo sync 후 sudo reboot
# sudo -i R
# install.packages(“rJava”)
library(rJava)
# sudo apt install -y openjdk-8-jdk openjdk-8-jre : 윈도우와 동일
# 자바설치 확인
# java -version
# R에 Java 파일이 있을 거라고 생각되는 위치에 업데이트 한다.
#
#
# sudo R CMD javareconf
# sudo sync 후 sudo reboot
# sudo -i R
# install.packages(“rJava”)
library(rJava)
Sys.getenv(JAVA_HOME)
Sys.getenv("JAVA_HOME")
# 설치 위치 바궜으면,  setenv 실행
# $ which java
Sys.setenv(JAVA_HOME="/usr/bin/java")
Sys.getenv("JAVA_HOME")
# sudo apt install -y openjdk-8-jdk openjdk-8-jre : 윈도우와 동일
# 자바설치 확인
# java -version
# R에 Java 파일이 있을 거라고 생각되는 위치에 업데이트 한다.
#
#
# sudo R CMD javareconf
# sudo sync 후 sudo reboot
# sudo -i R
# install.packages(“rJava”)
library(rJava)
# 설치 위치 바궜으면,  setenv 실행
# $ which java
Sys.setenv(JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64")
# sudo apt install -y openjdk-8-jdk openjdk-8-jre : 윈도우와 동일
# 자바설치 확인
# java -version
# R에 Java 파일이 있을 거라고 생각되는 위치에 업데이트 한다.
#
#
# sudo R CMD javareconf
# sudo sync 후 sudo reboot
# sudo -i R
# install.packages(“rJava”)
library(rJava)
Sys.getenv("JAVA_HOME")
# 설치 위치 바궜으면,  setenv 실행
# $ which java
Sys.setenv(JAVA_HOME="/usr/bin/java")
library(KoNLP)
# 설치 위치 바궜으면,  setenv 실행
# $ which java
Sys.setenv(JAVA_HOME="/usr/bin/java")
# sudo apt install -y openjdk-8-jdk openjdk-8-jre : 윈도우와 동일
# 자바설치 확인
# java -version
# R에 Java 파일이 있을 거라고 생각되는 위치에 업데이트 한다.
#
#
# sudo R CMD javareconf
# sudo sync 후 sudo reboot
# sudo -i R
# install.packages(“rJava”)
library(rJava)
library(KoNLP)
load("~/Documents/R/R_workspace/easy_r/.RData")
rm(list = ls())
library(devtools)
